---
# Dynamic variables here will be compiled to individual files in compiled/attributes.
attributes:
  environment: production
  ruby_version: 2.0.0

# Remote recipes here will be downloaded to compiled/recipes.
recipes:
  # rvm: https://raw.githubusercontent.com/kenn/sunzi-recipes/master/ruby/rvm.sh
  # dotdeb: https://raw.githubusercontent.com/kenn/sunzi-recipes/master/debian/dotdeb-wheezy.sh
  # backports: https://raw.githubusercontent.com/kenn/sunzi-recipes/master/debian/backports-wheezy.sh
  # mongodb-10gen: https://raw.githubusercontent.com/kenn/sunzi-recipes/master/debian/mongodb-10gen.sh
  # niso recipies
  # adduser: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/adduser.sh
  # build-essential: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/build-essential.sh
  # git: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/git.sh
  # mysql-client: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/mysql-client.sh
  # mysql: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/mysql.sh
  # nginx: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/nginx.sh
  # nodejs: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/nodejs.sh
  # rbenv: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/rbenv.sh
  # redis: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/redis.sh
  # set_env_vars: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/set_env_vars.sh
  # sidekiq: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/sidekiq.sh
  # sudonopassword: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/sudonopassword.sh
  # ufw: https://raw.githubusercontent.com/dakotalightning/niso-example/master/recipes/ufw.sh

# Files specified here will be copied to compiled/files.
# files:
#   - ~/.ssh/id_rsa.pub

# Fine tune how Niso should work.
preferences:
  # Erase the generated folder on the server after deploy.
  # Turn on when you are done with testing and ready for production use.
  erase_remote_folder: true

  # Skip retrieving remote recipes when local copies already exist. This setting helps
  # iterative deploy testing considerably faster, when you have a lot of remote recipes.
  cache_remote_recipes: false

  # Evaluate files as ERB templates. When enabled, you can pass dynamic values in the form
  # of <%= @attributes.environment %> in recipes, roles, files and install.sh.
  eval_erb: true
